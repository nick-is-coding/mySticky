name: API-CI

on:
  push:
    branches:
      - main
      - dev
    paths:
      - ".github/workflows/api-ci.yaml"
      - "Dockerfile.api"
      - "src/server/package.json"
      - "src/server/src/**"

concurrency:
  group: ${{ github.ref }}-api
  cancel-in-progress: true

env:
  IMAGE: ${{ github.event.repository.name }}-api-${{ fromJSON('{"main":"prod"}')[github.ref_name] || github.ref_name }}
  REGISTRY: ${{ vars.REGISTRY }}

jobs:
  build-api:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '~api') }}
    environment: ${{ fromJSON('{"main":"prod"}')[github.ref_name] || github.ref_name }}
    steps:
      - name: Print Job Description
        run: |
          echo building \"$IMAGE\" from branch \"${{ github.ref_name }}\"
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_SSH_KEY }}
          submodules: recursive
      - name: Build
        run: |
          docker build . --file Dockerfile.api --tag $IMAGE:latest
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to doctl
        run: doctl registry login --expiry-seconds 180
      - name: Tag Docker Image
        run: docker tag $IMAGE:latest $REGISTRY/$IMAGE:latest
      - name: Push Docker Image
        run: docker push $REGISTRY/$IMAGE:latest

  deploy-api:
    needs: build-api
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '~api') }}
    environment: ${{ fromJSON('{"main":"prod"}')[github.ref_name] || github.ref_name }}
    env:
      CORS_ORIGIN: ${{ vars.CORS_ORIGIN }}
      PG_CONNECTION_STRING: ${{ secrets.PG_CONNECTION_STRING }}
      PORT: ${{ vars.PORT }}
    steps:
      - name: Print Job Description
        run: |
          echo deploying \"$IMAGE\" from branch \"${{ github.ref_name }}\"
      - name: Install SSH Key
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-host: ${{ secrets.SSH_HOST }}
      - name: Spin Up Docker Image
        run: |
          ssh root@${{ secrets.SSH_HOST }} \
          docker run -d -p 80:80/tcp \
            -e PORT=$PORT \
            -e PG_CONNECTION_STRING=$PG_CONNECTION_STRING \
            $REGISTRY/$IMAGE:latest